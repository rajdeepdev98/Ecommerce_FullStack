// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//profile
model User{
  id  String @id @default(uuid())
  email String @unique
  password String
 // slug String @unique 
  name String?
  addresses Address[]
  avatar String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  orders Order[]
  reviews Review[]


  
}

model Address{
 
  id String @id @default(uuid())
  city String 
  state String
  country String
  user User @relation(fields: [userId] ,references: [id])
  userId String

  

}
//Order
model Order{
  id String @id @default(uuid())
  user User @relation(fields: [userId] ,references: [id])
  userId String 
  orderItems OrderItem[]


}
model OrderItem{
  id String @id @default(uuid())
  price Float 
  quantity Int
  order Order @relation(fields:[orderId],references: [id])
  orderId String
  
}

model Product{
  id String @id @default(uuid())
  title String
  pictures String[]
  summary String
  description String
  price Float
  tags String[]
  createdAt DateTime
  updatedAt DateTime
  reviews Review[]
  categories ProductInCategory[]
  

}
model Review{
  id String @id @default(uuid())
  userId String
  productId String
  user User @relation(fields: [userId],references: [id])
  product Product @relation(fields:[productId],references: [id])
  
  
}
model Category{
  id String @id @default(uuid())
  slug String @unique
  name String
  description String
  tags String[]
  createdAt DateTime
  updatedAt DateTime
  products ProductInCategory[]

}
model ProductInCategory{
  id String @id @default(uuid())
  productId String 
  categoryId String
  product Product @relation(fields: [productId],references: [id])
  category Category  @relation(fields: [categoryId],references: [id])

}